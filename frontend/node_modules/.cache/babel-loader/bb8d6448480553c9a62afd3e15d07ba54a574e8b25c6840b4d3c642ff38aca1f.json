{"ast":null,"code":"import { baseUrl, groupId, token } from \"./constants\";\nconst BASE_URL = \"https://tripleten.desarrollointerno.com\";\n\n// Función para registrar un nuevo usuario\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(resp => {\n    if (resp.ok) {\n      return resp.json();\n    }\n    return Promise.reject(`Error: ${resp.status}`);\n  });\n};\n\n// Función para iniciar sesión\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(resp => {\n    if (resp.ok) {\n      return resp.json();\n    }\n    return Promise.reject(`Error: ${resp.status}`);\n  }).then(res => {\n    localStorage.setItem(\"jwt\", res.token);\n    return res;\n  });\n};\n\n// Función para comprobar la validez del token\nexport const checkToken = async () => {\n  return fetch(`${baseUrl}${groupId}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `${token}`\n    }\n  }).then(response => {\n    if (!response.ok) {\n      return Promise.reject(`Error: ${response.status}`);\n    }\n    return response.json();\n  });\n};","map":{"version":3,"names":["baseUrl","groupId","token","BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","resp","ok","json","Promise","reject","status","authorize","res","localStorage","setItem","checkToken","Authorization","response"],"sources":["C:/Users/eduar/Documents/Tripleten/web_project_api_full/frontend/src/utils/auth.js"],"sourcesContent":["import { baseUrl, groupId, token } from \"./constants\";\r\nconst BASE_URL = \"https://tripleten.desarrollointerno.com\";\r\n\r\n// Función para registrar un nuevo usuario\r\nexport const register = (email, password) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email: email, password: password }),\r\n  }).then((resp) => {\r\n    if (resp.ok) {\r\n      return resp.json();\r\n    }\r\n    return Promise.reject(`Error: ${resp.status}`);\r\n  });\r\n};\r\n\r\n// Función para iniciar sesión\r\nexport const authorize = (email, password) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email: email, password: password }),\r\n  })\r\n    .then((resp) => {\r\n      if (resp.ok) {\r\n        return resp.json();\r\n      }\r\n      return Promise.reject(`Error: ${resp.status}`);\r\n    })\r\n    .then((res) => {\r\n      localStorage.setItem(\"jwt\", res.token);\r\n      return res;\r\n    });\r\n};\r\n\r\n// Función para comprobar la validez del token\r\nexport const checkToken = async () => {\r\n  return fetch(`${baseUrl}${groupId}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `${token}`,\r\n    },\r\n  }).then((response) => {\r\n    if (!response.ok) {\r\n      return Promise.reject(`Error: ${response.status}`);\r\n    }\r\n    return response.json();\r\n  });\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,EAAEC,KAAK,QAAQ,aAAa;AACrD,MAAMC,QAAQ,GAAG,yCAAyC;;AAE1D;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAC,GAAGJ,QAAQ,SAAS,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAS,CAAC;EAC3D,CAAC,CAAC,CAACO,IAAI,CAAEC,IAAI,IAAK;IAChB,IAAIA,IAAI,CAACC,EAAE,EAAE;MACX,OAAOD,IAAI,CAACE,IAAI,CAAC,CAAC;IACpB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAC,UAAUJ,IAAI,CAACK,MAAM,EAAE,CAAC;EAChD,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGA,CAACf,KAAK,EAAEC,QAAQ,KAAK;EAC5C,OAAOC,KAAK,CAAC,GAAGJ,QAAQ,SAAS,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK,EAAEA,KAAK;MAAEC,QAAQ,EAAEA;IAAS,CAAC;EAC3D,CAAC,CAAC,CACCO,IAAI,CAAEC,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,EAAE,EAAE;MACX,OAAOD,IAAI,CAACE,IAAI,CAAC,CAAC;IACpB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAC,UAAUJ,IAAI,CAACK,MAAM,EAAE,CAAC;EAChD,CAAC,CAAC,CACDN,IAAI,CAAEQ,GAAG,IAAK;IACbC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,GAAG,CAACnB,KAAK,CAAC;IACtC,OAAOmB,GAAG;EACZ,CAAC,CAAC;AACN,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,OAAOjB,KAAK,CAAC,GAAGP,OAAO,GAAGC,OAAO,WAAW,EAAE;IAC5CO,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCgB,aAAa,EAAE,GAAGvB,KAAK;IACzB;EACF,CAAC,CAAC,CAACW,IAAI,CAAEa,QAAQ,IAAK;IACpB,IAAI,CAACA,QAAQ,CAACX,EAAE,EAAE;MAChB,OAAOE,OAAO,CAACC,MAAM,CAAC,UAAUQ,QAAQ,CAACP,MAAM,EAAE,CAAC;IACpD;IACA,OAAOO,QAAQ,CAACV,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}